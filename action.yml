name: 'MSIX Bundler'
description: 'This action creates an msixbundle file from a list of MSIX packages'
author: 'Lance McCarthy'
branding:
  icon: 'box'
  color: 'purple'
inputs:
  msix-folder:
    description: 'The absolute path to the folder containing all the MSIX files to be bundled.'
    required: true
    default: ''
  msixbundle-filepath:
    description: 'The absolute file path to be used for the .msixbundle (C:\MyFolder\MyApp_1.0.0.0_x86_x64.msixbundle).'
    required: true
    default: ''
  msixbundle-version:
    description: 'Specifies the version number of the bundle. The version number MUST be in four parts separated by periods in the form: <Major>.<Minor>.<Build>.<Revision>.'
    required: true
    default: '0.0.0.0'
  sdk-version:
    description: 'The version of makeappx.exe and signtool.exe (default is 10.0.19041.0).'
    required: false
    default: '10.0.19041.0'
  architecture:
    description: 'The architecture version of makeappx.exe to use (default is x86).'
    required: false
    default: 'x86'
  enable-bundle-signing:
    description: 'Enables signing the bundle using signtool.exe'
    required: false
    default: false
  certificate-path:
    description: 'Path to the code signing certificate (i.e., the PFX file).'
    default: ''
  certificate-private-key:
    description: 'The private key (password) for the PFX.'
    required: false
    default: ''
  signing-hash-algorithm:
    description: 'The hash algorithm used for signing (default is SHA256).'
    required: false
    default: 'SHA256'
outputs:
  msixbundle_path:
    description: "The absolute file path to the generated msixbundle file."
    value: ${{ steps.bundle.outputs.final_path }}
runs:
  using: "composite"
  steps:
    - id: bundle
      shell: pwsh
      run: |
        $msixBundlePath = ${{ inputs.msixbundle-filepath }}

        ${{ github.action_path }}/bundleAndSign.ps1 -MsixSourceFolder ${{ inputs.msix-folder }} -BundleFilePath ${{ inputs.msixbundle-filepath }} -$BundleVersion ${{ inputs.msixbundle-version }} -Architecture ${{ inputs.architecture }} -SdkVersion ${{ inputs.sdk-version }} -IsSigningEnabled ${{ inputs.enable-bundle-signing }} -PfxPrivateKey ${{ inputs.certificate-private-key }} -PfxFilePath ${{ inputs.certificate-path }} -HashAlgo ${{ inputs.signing-hash-algorithm }}

        if([string]::IsNullOrWhiteSpace($msixBundlePath)){
          echo "The output file path is empty, something went wrong. Please check the build log output for details."
          exit 1
        }

        # Set the output variable
        echo "::set-output name=final_path::$msixBundlePath"
