name: 'MSIX Bundler'
description: 'This action creates an msixbundle file from a list of MSIX packages'
author: 'Lance McCarthy'
branding:
  icon: 'box'
  color: 'purple'
inputs:
  msix-folder:
    description: 'The complete folder path containing the MSIX files to be bundled.'
    required: true
    default: ''
  msixbundle-filepath:
    description: 'The complete file path of the .msixbundle file to be created.'
    required: true
    default: ''
  msixbundle-version:
    description: 'Specifies the version number of the bundle. The version number must be in four parts separated by periods in the form: <Major>.<Minor>.<Build>.<Revision>.'
    required: true
    default: '0.0.0.0'
  sdk-version:
    description: 'The version of makeappx.exe and signtool.exe (default is 10.0.19041.0).'
    required: false
    default: '10.0.19041.0'
  architecture:
    description: 'The architecture version of makeappx.exe to use (default is x86).'
    required: false
    default: 'x86'
  enable-bundle-signing:
    description: 'Enables signing the bundle using signtool.exe'
    required: false
    default: false
  certificate-path:
    description: 'Path to the code signing certificate (i.e., the PFX file).'
    default: ''
  certificate-private-key:
    description: 'The private key (password) for the PFX.'
    required: false
    default: ''
  signing-hash-algorithm:
    description: 'The hash algorithm used for signing (default is SHA256).'
    required: false
    default: 'SHA256'
outputs:
  msixbundle_path:
    description: "The absolute file path to the msixbundle file."
    value: ${{ steps.bundle.outputs.final_path }}
runs:
  using: "composite"
  steps:
    - id: bundle
      shell: pwsh
      run: |
        ## ******************************************* ##
        ## ********* STEP 1. PROCESS FILES *********** ##
        ## ******************************************* ##
        # echo "Splitting file paths..."
        # $msixPaths = ${{ inputs.msix-paths }}
        # $paths = $msixPaths -split ";"

        # $count = $paths.count
        # echo "MSIX files requested for bundling: $count"

        # echo "Creating a folder in temp to copy in and process msix files"
        # $tempPackagesFolder = Join-Path -Path $env:TEMP -ChildPath "AppPackages"
        # New-Item -Path $tempPackagesFolder -ItemType Directory -Force

        # echo "Created $tempPackagesFolder"

        # echo "Cleaning old msix files from temp folder"
        # Remove-Item $tempPackagesFolder\*.msix

        # echo "Coping each MSIX file into temporary folder"
        # $paths | ForEach-Object {
        #   $outputFileName = Split-Path $_ -leaf
        #   $inputFileName = $_.Trim()
        #   $destinationPath = Join-Path -Path $tempPackagesFolder -ChildPath $outputFileName

        #   Copy-Item -Path $inputFileName -Destination $destinationPath

        #   echo "Successfully copied $destinationPath"
        # }

        ## ********************************** ##
        ## ******** STEP 1. BUNDLE ********** ##
        ## ********************************** ##

        $msixesFolder = "${{ inputs.msix-folder }}"
        echo "MSIX input folder -> $msixesFolder"

        $msixBundlePath = "${{ inputs.msixbundle-filepath }}"
        $msixbundleVersion = "${{ inputs.msixbundle-version }}"

        #echo "Assembling path for final msixbundle file..."
        #$msixBundlePath = Join-Path -Path $tempPackagesFolder -ChildPath $bundleFileName
        #$msixBundlePath = Join-Path -Path $tempPackagesFolder -ChildPath ${{ inputs.msixbundle-filepath }}
        #echo "will use $msixBundlePath"

        # IMPORTANT - We need to add the SDK's folder to PATH so that we can use the correct MakeAppx and SignTool
        #$sdkToolsPath = Join-Path -Path ";C:\Program Files (x86)\Windows Kits\10\bin" -ChildPath $sdkVersion -AdditionalChildPath $arch

        echo "Adding SDK tools folder to PATH"
        $sdkToolsPath = Join-Path -Path "C:\Program Files (x86)\Windows Kits\10\bin" -ChildPath ${{ inputs.sdk-version }} -AdditionalChildPath ${{ inputs.architecture }}
        $env:Path += ";$sdkToolsPath"

        echo "Creating bundle..."
        # From https://docs.microsoft.com/en-us/windows/msix/packaging-tool/bundle-msix-packages#step-2-bundle-the-packages
        MakeAppx.exe bundle /bv $msixbundleVersion /d $msixesFolder /p $msixBundlePath

        ## ************************************ ##
        ## ********** STEP 2. SIGN ************ ##
        ## ************************************ ##

        # check if the user wants to sign the bundle
        if (${{ inputs.enable-bundle-signing }}){
          Write-Host "Signing msix bundle."

          $hashAlgo = ${{ inputs.signing-hash-algorithm }}
          $certPath = ${{ inputs.certificate-path }}
          $certKey = ${{ inputs.certificate-private-key }}

          # From https://docs.microsoft.com/en-us/windows/msix/packaging-tool/bundle-msix-packages#step-3-sign-the-bundle
          SignTool.exe sign /fd $hashAlgo /a /f $certPath /p $certKey $msixBundlePath

          Write-Host "Signing complete!"
        } else {

          Write-Host "Skipped msixbundle signing."
        }

        # Set the output variable
        echo "::set-output name=final_path::$msixBundlePath"
