name: Development

on:
  push:
    branches:
      - development

jobs:
  test_bunding_with_signing:
    runs-on: windows-latest
    name: Test Bundling with Signing
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decode the Pfx
        id: save-pfx
        shell: pwsh
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.PFX_BASE64 }}")
          $currentDirectory = Get-Location
          $certificatePath = Join-Path -Path $currentDirectory -ChildPath "LancelotSoftware.pfx"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: Decode the Pfx
        id: gather-msix-files
        shell: pwsh
        run: |
          $currentDirectory = Get-Location
          $packagesFolder = Join-Path -Path $currentDirectory -ChildPath "TestFiles\AppPackages"
          $msixFiles = Get-ChildItem -Path $packagesFolder -Recurse -Include *.msix
          echo "discovered $msixFiles.count MSIX files"
          $msixPaths = ""
          $msixFiles | ForEach-Object {
            $msixPaths += "$_;"
          }
          $msixPaths.trim(";")

          echo "::set-output name=msix-files::$(echo $msixPaths)"

      - name: Test Bundling with Code Signing
        id: bundler
        uses: ./
        with:
          msix-paths: ${{ steps.gather-msix-files.outputs.msix-files }}
          msixbundle-filename: "MediaFileManager.Desktop_2021.722.1.0_x86_x64.msixbundle"
          enable-bundle-signing: true
          certificate-path: 'LancelotSoftware.pfx'
          certificate-private-key: ${{ secrets.PFX_PRIVATE_KEY }}
          sdk-version: "10.0.19041.0"
          architecture: "x86"
      
      - name: Verify bundle output
        shell: pwsh
        run: |
          $msixBundlePath = "placeholder value"
          $msixBundlePath = ${{ steps.bundler.outputs.msixbundle-path }}
          echo $msixBundlePath