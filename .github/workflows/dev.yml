name: Development

on:
  push:
    branches:
      - development

jobs:
  test_bunding_with_signing:
    runs-on: windows-latest
    name: Test Bundling with Signing
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Decode the Pfx
        id: save-pfx
        shell: pwsh
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.PFX_BASE64 }}")
          $currentDirectory = Get-Location
          $certificatePath = Join-Path -Path $currentDirectory -ChildPath "LancelotSoftware.pfx"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: Gather MSIX files
        id: gather
        shell: pwsh
        run: |
          $currentDirectory = Get-Location
          $packagesFolder = Join-Path -Path $currentDirectory -ChildPath "TestFiles\AppPackages"
          $msixFiles = Get-ChildItem -Path $packagesFolder -Recurse -Include *.msix
          $count = $msixFiles.count
          echo "discovered $count MSIX files"

          echo "copying MSIX files into a single, separate, folder for processing"
          $tempMsixFolder = Join-Path -Path $currentDirectory -ChildPath "MsixFiles\"
          
          $msixFiles | ForEach-Object {
            Copy-Item -Path $_ -Destination $tempMsixFolder
            echo "Successfully copied $_ to $tempMsixFolder"
          }

          $desiredMsixBundleFileName = "MediaFileManager.Desktop_2021.722.1.0_x86_x64.msixbundle"

          echo "::set-output name=msix_folderpath::$tempMsixFolder"
          echo "::set-output name=msixbundle_filename::$desiredMsixBundleFileName"

      - name: Verify Gather Output
        shell: pwsh
        run: |
          $msixesFolder = "${{ steps.gather.outputs.msix_folderpath }}"
          $bundleFileName = "${{ steps.gather.outputs.msixbundle_filename }}"
          echo "Input MSIXes Folder Path => $msixesFolder"
          echo "Output File Name => $bundleFileName"
      
      - name: Test Bundling with Code Signing
        id: bundler
        uses: ./
        with:
          msix-folder: ${{ steps.gather.outputs.msix_folderpath }}
          msixbundle-filename: ${{ steps.gather.outputs.msixbundle_filename }}
          msixbundle-version: "2021.722.1.0"
          enable-bundle-signing: true
          certificate-path: 'LancelotSoftware.pfx'
          certificate-private-key: ${{ secrets.PFX_PRIVATE_KEY }}
          sdk-version: "10.0.19041.0"
          architecture: "x86"
      
      - name: Verify Bundle Output
        shell: pwsh
        run: |
          $msixesFolder = "${{ steps.gather.outputs.msix_folderpath }}"
          $bundleFileName = "${{ steps.gather.outputs.msixbundle_filename }}"
          $msixBundlePath = "${{ steps.bundler.outputs.msixbundle_path }}"
          echo "Input Folder Path => $msixesFolder"
          echo "Desired File Name => $bundleFileName"
          echo "Generated msixbundle path => $msixBundlePath"